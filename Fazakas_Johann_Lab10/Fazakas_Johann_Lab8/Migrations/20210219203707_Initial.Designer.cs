// <auto-generated />
using System;
using Fazakas_Johann_Lab8.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Fazakas_Johann_Lab8.Migrations
{
    [DbContext(typeof(Fazakas_Johann_Lab8Context))]
    [Migration("20210219203707_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.11");

            modelBuilder.Entity("Fazakas_Johann_Lab8.Models.Guitar", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Brand")
                        .HasColumnType("TEXT");

                    b.Property<string>("Color")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("OwnerID")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("OwnerID");

                    b.ToTable("Guitar");
                });

            modelBuilder.Entity("Fazakas_Johann_Lab8.Models.GuitarTag", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Guitar")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GuitarId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Tag")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TagId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("GuitarId");

                    b.HasIndex("TagId");

                    b.ToTable("GuitarTag");
                });

            modelBuilder.Entity("Fazakas_Johann_Lab8.Models.Owner", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("OwnerName")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Owner");
                });

            modelBuilder.Entity("Fazakas_Johann_Lab8.Models.Tag", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("TagName")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Tag");
                });

            modelBuilder.Entity("Fazakas_Johann_Lab8.Models.Guitar", b =>
                {
                    b.HasOne("Fazakas_Johann_Lab8.Models.Owner", "Owner")
                        .WithMany("Guitars")
                        .HasForeignKey("OwnerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Fazakas_Johann_Lab8.Models.GuitarTag", b =>
                {
                    b.HasOne("Fazakas_Johann_Lab8.Models.Guitar", null)
                        .WithMany("GuitarTags")
                        .HasForeignKey("GuitarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fazakas_Johann_Lab8.Models.Tag", null)
                        .WithMany("GuitarTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
